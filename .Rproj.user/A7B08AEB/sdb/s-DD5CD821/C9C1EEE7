{
    "contents" : "library(shiny)#I wonder why this is here?\nlibrary(gdata) #Used for read.xls function\nlibrary(emdbook)\nlibrary(reshape2)\nlibrary(ggplot2)#ggplot function\nsource(\"main.R\")#Source for our reliabilty models\n\n\nshinyServer(function(input, output) {#reactive shiny fuction\n  \n  reliability <- new.env()\n  Subsystem <- reactive({\n    \n              #Subsystem1\n               reliability$sub1$Reliability_Investment <- seq(0, input$Reliability_Investment_input1, by = 1000)\n               reliability$sub1$MTTF <- MTTF_Function(reliability$sub1$Reliability_Investment,input$C01,input$Cost_Increment1,input$Amode_fail_rate1,input$Bmode_fail_rate1,input$Bmode_FEF1)\n               reliability$sub1$minunit <- repParts(input$Ttime1,reliability$sub1$MTTF)\n               reliability$sub1$cst <- Cost(reliability$sub1$minunit, input$Ci1)\n               reliability$sub1$Aff <- AFF(input$Ci1, reliability$sub1$cst)\n               reliability$sub1$numUnits <- NumUnits(1000000000,reliability$sub1$Reliability_Investment,reliability$unitCost)#reliability$sub1$cst)\n              #Subsystem2\n               reliability$sub2$Reliability_Investment <- seq(0, input$Reliability_Investment_input2, by = 1000)\n               reliability$sub2$MTTF <- MTTF_Function(reliability$sub2$Reliability_Investment,input$C02,input$Cost_Increment2,input$Amode_fail_rate2,input$Bmode_fail_rate2,input$Bmode_FEF2)\n               reliability$sub2$minunit <- repParts(input$Ttime2,reliability$sub2$MTTF)\n               reliability$sub2$cst <- Cost(reliability$sub2$minunit, input$Ci2)\n               reliability$sub2$Aff <- AFF(input$Ci2, reliability$sub2$cst)\n               reliability$sub2$numUnits <- NumUnits(1000000000,reliability$sub2$Reliability_Investment,reliability$unitCost)#reliability$sub2$cst)\n              #Unit\n               reliability$unitCost <- UnitCost(reliability$sub1$cst,reliability$sub2$cst)\n               reliability$unitInvestment <- UnitInvestment(reliability$sub1$Reliability_Investment,reliability$sub2$Reliability_Investment)\n               reliability$numUnits <- NumUnits(1000000000,100000000,reliability$unitCost)\n               \n               reliability\n  })\n  \n  Reliability <- reactive({\n    i=as.integer(input$subsystem)\n    reli <- new.env()\n    switch(input$panelName,\n           \"subsystem 1\" = {reli = Subsystem()$sub1},\n           \"subsystem 2\" = {reli = Subsystem()$sub2},\n            \"3\" = {reli = Subsystem()$sub3},\n            \"4\" = {reli = Subsystem()$sub4})\n    reli\n  })\n  #Mean time to falure vs reliability investment\n  output$MTTF <- renderPlot({ #reactive function, basically Main()\n    p <- qplot(Reliability()$Reliability_Investment,Reliability()$MTTF)\n    p\n  })\n  #number of replacement part\n  output$repParts <- renderPlot({ \n    p <- qplot(Reliability()$Reliability_Investment,Reliability()$minunit)\n    p \n  })\n  #cost per subsystem vs investment\n  output$Cost <- renderPlot({ \n\n    if(Subsystem()$sub1$Reliability_Investment[length(Subsystem()$sub1$Reliability_Investment)] > Subsystem()$sub2$Reliability_Investment[length(Subsystem()$sub2$Reliability_Investment)]) X <-  Subsystem()$sub1$Reliability_Investment else X <- Subsystem()$sub2$Reliability_Investment\n    y1 <- Subsystem()$sub1$cst\n    y2 <- Subsystem()$sub2$cst\n    y3 <- y1 + y2 #Subsystem()$numUnits\n    length(y3) = length(y1)  = length(y2) = length(X)\n    plot_data <- data.frame(x = X, \"Subsystem 1\" = y1, \"Subsystem 2\" = y2, \"System\" = y3)\n    \n    #plot_data <- data.frame(x = Reliability()$Reliability_Investment, \"Subsystem 1\" = Subsystem()$sub1$cst, \"Subsystem 2\" = Subsystem()$sub2$cst)\n\n    plot_data_long <- melt(plot_data, id = \"x\")\n    p <- ggplot(data = plot_data_long, aes(x = x, y = value, colour = variable)) + geom_point() +ylab(\"Cost\")+ xlab(\"Reliability Investment\")\n    p\n  })\n  #total fleet size\n  output$fleetSize <- renderPlot({ \n    if(Subsystem()$sub1$Reliability_Investment[length(Subsystem()$sub1$Reliability_Investment)] > Subsystem()$sub2$Reliability_Investment[length(Subsystem()$sub2$Reliability_Investment)]) X <-  Subsystem()$sub1$Reliability_Investment else X <- Subsystem()$sub2$Reliability_Investment\n    y1 <- Subsystem()$sub1$numUnits\n    y2 <- Subsystem()$sub2$numUnits\n    y3 <- Subsystem()$numUnits\n    length(y3) = length(y1)  = length(y2) = length(X)\n    plot_data <- data.frame(x = X, \"Subsystem 1\" = y1, \"Subsystem 2\" = y2, \"System\" = y3)\n    plot_data_long <- melt(plot_data, id = \"x\")\n    p <- ggplot(data = plot_data_long, aes(x = x, y = value, colour = variable)) + geom_point() +ylab(\"Units\")+ xlab(\"Reliability Investment\")\n    p\n  })\n  output$maxFleet <- renderPlot({\n    x <- Subsystem()$sub1$Reliability_Investment\n    y <- Subsystem()$sub2$Reliability_Investment\n    xc <- Subsystem()$sub1$cst\n    yc <- Subsystem()$sub2$cst\n    zfunc <- function(x,y) {NumUnits(1000000000,x+y,100000000)}\n    z <- outer(x,y,zfunc)\n    p <- image(z)\n    p\n  })\n  output$Aff <- renderPlot({ \n    p <- qplot(Reliability()$Reliability_Investment,Reliability()$Aff)\n    p\n  })\n  \n  \n  \n  output$MTTF_Output<-  renderText({\n   Reliability()$numUnits\n  })\n  output$ui <- renderUI({\n    \n  })\n  \n  \n  \n  \n})\n",
    "created" : 1435830626504.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3671808629",
    "id" : "C9C1EEE7",
    "lastKnownWriteTime" : 1436355836,
    "path" : "~/r/Reliability/server.R",
    "project_path" : "server.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}